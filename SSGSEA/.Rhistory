colnames = TRUE,
number_color = "black",
border=FALSE
)
ggsave("ssgsea-luad.png",p,width = 4500,height = 2000,units = "px")
View(gsva_data1)
write.csv(gsva_data1,'luad-gsva-end.csv',row.names = TRUE)
write.csv(cooo,"corr.csv",row.names = TRUE)
library(ggplot2)
library(reshape2)
df = read.csv("luad-gsva-end.csv",sep=",",encoding="UTF-8")
View(df)
df = melt(df)                    # melt出自reshape2包
head(df)                         # 查看转换完成的数据的前几行
ggplot(df, aes(x=factor(Mixture,levels =unique(Mixture)),  # 转化为因子，目的是显示顺序与文件顺序相同，否则按照字母顺序排序
y=value,
fill=factor(variable,levels = unique(variable)),
))+
labs(
x="",   # 调整x轴名称
y="",   # 调整y轴名称
fill="" # 调整图例名称
)+geom_bar(position="fill",
stat="identity",colour="black")+theme(axis.text.y = element_text(size = 14))+
theme(legend.text = element_text(size = 14))+
theme(axis.text.x = element_text(size = 13))+
theme(panel.grid = element_blank(),
axis.text.x = element_text(angle = 80,vjust = 1,hjust = 1,size = 5,face=2))+
scale_y_continuous(labels = function(x) paste0(x*100, "%"))
ggplot(df, aes(x=factor(Mixture,levels =unique(Mixture)),  # 转化为因子，目的是显示顺序与文件顺序相同，否则按照字母顺序排序
y=value,
fill=factor(variable,levels = unique(variable)),
))+
labs(
x="",   # 调整x轴名称
y="",   # 调整y轴名称
fill="" # 调整图例名称
)+geom_bar(position="fill",
stat="identity",colour="black")+theme(axis.text.y = element_text(size = 14))+
theme(legend.text = element_text(size = 14))+
theme(axis.text.x = element_text(size = 13))+
theme(panel.grid = element_blank(),
axis.text.x = element_text(angle = 80,vjust = 1,hjust = 1,size = 5,face=2))+
scale_y_continuous(labels = function(x) paste0(x*100, "%"))+
ylab("Relative Percent")
ggplot(df, aes(x=factor(Mixture,levels =unique(Mixture)),  # 转化为因子，目的是显示顺序与文件顺序相同，否则按照字母顺序排序
y=value,
fill=factor(variable,levels = unique(variable)),
))+
labs(
x="",   # 调整x轴名称
y="",   # 调整y轴名称
fill="" # 调整图例名称
)+geom_bar(position="fill",
stat="identity",colour="black")+theme(axis.text.y = element_text(size = 14))+
theme(legend.text = element_text(size = 14))+
theme(axis.text.x = element_text(size = 13))+
theme(panel.grid = element_blank(),
axis.text.x = element_text(angle = 80,vjust = 1,hjust = 1,size = 5,face=2))+
scale_y_continuous(labels = function(x) paste0(x*100, "%"))+
ylab("Relative Percent")++theme(legend.text = element_text(size = 15))
ggplot(df, aes(x=factor(Mixture,levels =unique(Mixture)),  # 转化为因子，目的是显示顺序与文件顺序相同，否则按照字母顺序排序
y=value,
fill=factor(variable,levels = unique(variable)),
))+
labs(
x="",   # 调整x轴名称
y="",   # 调整y轴名称
fill="" # 调整图例名称
)+geom_bar(position="fill",
stat="identity",colour="black")+theme(axis.text.y = element_text(size = 14))+
theme(legend.text = element_text(size = 14))+
theme(axis.text.x = element_text(size = 13))+
theme(panel.grid = element_blank(),
axis.text.x = element_text(angle = 80,vjust = 1,hjust = 1,size = 5,face=2))+
scale_y_continuous(labels = function(x) paste0(x*100, "%"))+
ylab("Relative Percent")+
theme(legend.text = element_text(size = 15))
ggplot(df, aes(x=factor(Mixture,levels =unique(Mixture)),  # 转化为因子，目的是显示顺序与文件顺序相同，否则按照字母顺序排序
y=value,
fill=factor(variable,levels = unique(variable)),
))+
labs(
x="",   # 调整x轴名称
y="",   # 调整y轴名称
fill="" # 调整图例名称
)+geom_bar(position="fill",
stat="identity",colour="black")+theme(axis.text.y = element_text(size = 14))+
theme(legend.text = element_text(size = 14))+
theme(axis.text.x = element_text(size = 13))+
theme(panel.grid = element_blank(),
axis.text.x = element_text(angle = 80,vjust = 1,hjust = 1,size = 5,face=2))+
scale_y_continuous(labels = function(x) paste0(x*100, "%"))+
ylab("Relative Percent")+
theme(legend.text = element_text(size = 10))
ggplot(df, aes(x=factor(Mixture,levels =unique(Mixture)),  # 转化为因子，目的是显示顺序与文件顺序相同，否则按照字母顺序排序
y=value,
fill=factor(variable,levels = unique(variable)),
))+
labs(
x="",   # 调整x轴名称
y="",   # 调整y轴名称
fill="" # 调整图例名称
)+geom_bar(position="fill",
stat="identity",colour="black")+theme(axis.text.y = element_text(size = 14))+
theme(legend.text = element_text(size = 14))+
theme(axis.text.x = element_text(size = 13))+
theme(panel.grid = element_blank(),
axis.text.x = element_text(angle = 80,vjust = 1,hjust = 1,size = 5,face=2))+
scale_y_continuous(labels = function(x) paste0(x*100, "%"))+
ylab("Relative Percent")+
theme(legend.text = element_text(size = 8))
p = ggplot(df, aes(x=factor(Mixture,levels =unique(Mixture)),  # 转化为因子，目的是显示顺序与文件顺序相同，否则按照字母顺序排序
y=value,
fill=factor(variable,levels = unique(variable)),
))+
labs(
x="",   # 调整x轴名称
y="",   # 调整y轴名称
fill="" # 调整图例名称
)+geom_bar(position="fill",
stat="identity",colour="black")+theme(axis.text.y = element_text(size = 14))+
theme(legend.text = element_text(size = 14))+
theme(axis.text.x = element_text(size = 13))+
theme(panel.grid = element_blank(),
axis.text.x = element_text(angle = 80,vjust = 1,hjust = 1,size = 5,face=2))+
scale_y_continuous(labels = function(x) paste0(x*100, "%"))+
ylab("Relative Percent")+
theme(legend.text = element_text(size = 8))
ggsave("gsva-bar-8-22.png",p1,width = 5500,height = 4500,units = "px")
ggsave("gsva-bar-8-22.png",p,width = 5500,height = 4500,units = "px")
p = ggplot(df, aes(x=factor(Mixture,levels =unique(Mixture)),  # 转化为因子，目的是显示顺序与文件顺序相同，否则按照字母顺序排序
y=value,
fill=factor(variable,levels = unique(variable)),
))+
labs(
x="",   # 调整x轴名称
y="",   # 调整y轴名称
fill="" # 调整图例名称
)+geom_bar(position="fill",
stat="identity",colour="black")+theme(axis.text.y = element_text(size = 14))+
theme(legend.text = element_text(size = 14))+
theme(axis.text.x = element_text(size = 13))+
theme(panel.grid = element_blank(),
axis.text.x = element_text(angle = 80,vjust = 1,hjust = 1,size = 5,face=2))+
scale_y_continuous(labels = function(x) paste0(x*100, "%"))+
ylab("Relative Percent")+
theme(legend.text = element_text(size = 12))
ggsave("gsva-bar-8-22.png",p,width = 5500,height = 4500,units = "px")
ggsave("gsva-bar-8-22.png",p,width = 6500,height = 4500,units = "px")
ggsave("gsva-bar-8-22.png",p,width = 7500,height = 4500,units = "px")
ggsave("gsva-bar-8-22.png",p,width = 8500,height = 4500,units = "px")
library(ggplot2)
library(reshape2)
#读取输入文件
rt = read.csv(file = "imm-v-degs.csv",
sep = ",",
header = T,
check.names=F,
row.names=1)
#读取输入文件
rt = read.csv(file = "luad-gsva-end.csv",
sep = ",",
header = T,
check.names=F,
row.names=1)
View(rt)
library(ggplot2)
library(reshape2)
x=colnames(rt)[1]
colnames(rt)[1]="Type"
#差异分析
geneSig=c("")
for(gene in colnames(rt)[2:ncol(rt)]){
rt1=rt[,c(gene,"Type")]
colnames(rt1)=c("expression","Type")
p=1
if(length(levels(factor(rt1$Type)))>2){
test=kruskal.test(expression ~ Type, data = rt1)
p=test$p.value
}else{
test=wilcox.test(expression ~ Type, data = rt1)
p=test$p.value
}
Sig=ifelse(p<0.001,"***",ifelse(p<0.01,"**",ifelse(p<0.05,"*","")))
geneSig=c(geneSig,Sig)
}
colnames(rt)=paste0(colnames(rt),geneSig)
#把数据转换成ggplot2文件
data=melt(rt,id.vars=c("Type"))
colnames(data)=c("Type","Gene","Fraction")
#绘制
p1=ggplot(data,aes(x=Type,y=Fraction,fill=Type))+
guides(fill=guide_legend(title=x))+
labs(x = x, y = "Fraction")+
geom_violin()+ geom_boxplot(width=0.2,position=position_dodge(0.9))+
facet_wrap(~Gene,nrow =1)+ theme_bw()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))
p1
View(rt1)
View(rt)
View(data)
View(test)
View(rt1)
View(p1)
View(rt1)
View(rt)
ggsave("vio-gsea-8-22.png",p1,width = 5000,height = 3500,units = "px")
ggsave("vio-gsea-8-22.png",p1,width = 6000,height = 3500,units = "px")
ggsave("vio-gsea-8-22.png",p1,width = 8000,height = 3500,units = "px")
View(rt1)
View(rt)
library(ggplot2)
library(reshape2)
#读取输入文件
rt = read.csv(file = "luad-gsva-end.csv",
sep = ",",
header = T,
check.names=F,
row.names=1)
x=colnames(rt)[1]
colnames(rt)[1]="Type"
#差异分析
geneSig=c("")
for(gene in colnames(rt)[2:ncol(rt)]){
rt1=rt[,c(gene,"Type")]
colnames(rt1)=c("expression","Type")
p=1
if(length(levels(factor(rt1$Type)))>2){
test=kruskal.test(expression ~ Type, data = rt1)
p=test$p.value
}else{
test=wilcox.test(expression ~ Type, data = rt1)
p=test$p.value
}
Sig=ifelse(p<0.001,"***",ifelse(p<0.01,"**",ifelse(p<0.05,"*","")))
geneSig=c(geneSig,Sig)
}
colnames(rt)=paste0(colnames(rt),geneSig)
#把数据转换成ggplot2文件
data=melt(rt,id.vars=c("Type"))
colnames(data)=c("Type","Gene","Fraction")
#绘制
p1=ggplot(data,aes(x=Type,y=Fraction,fill=Type))+
guides(fill=guide_legend(title=x))+
labs(x = x, y = "Fraction")+
geom_violin()+ geom_boxplot(width=0.2,position=position_dodge(0.9))+
facet_wrap(~Gene,nrow =1)+ theme_bw()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))
#读取输入文件
rt = read.csv(file = "luad-gsva-end.csv",
sep = ",",
header = T,
check.names=F,
row.names=1)
p1
ggsave("vio-gsea-8-22.png",p1,width = 8000,height = 3500,units = "px")
View(rt1)
View(rt)
View(p1)
View(test)
View(p1)
View(data)
View(test)
View(rt1)
View(rt)
View(p1)
View(rt)
View(data)
View(p1)
View(rt)
View(rt1)
View(rt)
View(p1)
View(data)
View(test)
View(rt1)
View(data)
View(rt)
rt = read.csv(file = "luad-gsva-end.csv",
sep = ",",
header = T,
check.names=F,
row.names=1)
x=colnames(rt)[1]
colnames(rt)[1]="Type"
#差异分析
geneSig=c("")
for(gene in colnames(rt)[2:ncol(rt)]){
rt1=rt[,c(gene,"Type")]
colnames(rt1)=c("expression","Type")
p=1
if(length(levels(factor(rt1$Type)))>2){
test=kruskal.test(expression ~ Type, data = rt1)
p=test$p.value
}else{
test=wilcox.test(expression ~ Type, data = rt1)
p=test$p.value
}
Sig=ifelse(p<0.001,"***",ifelse(p<0.01,"**",ifelse(p<0.05,"*","")))
geneSig=c(geneSig,Sig)
}
colnames(rt)=paste0(colnames(rt),geneSig)
#把数据转换成ggplot2文件
data=melt(rt,id.vars=c("Type"))
colnames(data)=c("Type","Gene","Fraction")
View(data)
View(rt)
#绘制
p1=ggplot(data,aes(x=Type,y=Fraction,fill=Type))+
guides(fill=guide_legend(title=x))+
labs(x = x, y = "Fraction")+
geom_violin()+ geom_boxplot(width=0.2,position=position_dodge(0.9))+
facet_wrap(~Gene,nrow =1)+ theme_bw()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(data,aes(x=Type,y=Fraction,fill=Type))+
guides(fill=guide_legend(title=x))+
labs(x = x, y = "Fraction")+
geom_violin()+ geom_boxplot(width=0.2,position=position_dodge(0.9))+
facet_wrap(~Gene,nrow =1)+ theme_bw()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))
#读取输入文件
rt = read.csv(file = "luad-gsva-end.csv",
sep = ",",
header = T,
check.names=F,
row.names=1)
x=colnames(rt)[1]
colnames(rt)[1]="Type"
#差异分析
geneSig=c("")
for(gene in colnames(rt)[2:ncol(rt)]){
rt1=rt[,c(gene,"Type")]
colnames(rt1)=c("expression","Type")
p=1
if(length(levels(factor(rt1$Type)))>2){
test=kruskal.test(expression ~ Type, data = rt1)
p=test$p.value
}else{
test=wilcox.test(expression ~ Type, data = rt1)
p=test$p.value
}
Sig=ifelse(p<0.001,"***",ifelse(p<0.01,"**",ifelse(p<0.05,"*","")))
geneSig=c(geneSig,Sig)
}
colnames(rt)=paste0(colnames(rt),geneSig)
#把数据转换成ggplot2文件
data=melt(rt,id.vars=c("Type"))
colnames(data)=c("Type","Gene","Fraction")
View(data)
genes <- unique(data$Gene)
top_genes <- head(genes, 10)
ggplot(data, aes(x=Type, y=Fraction, fill=Type)) +
geom_violin() +
geom_boxplot(width=0.2,position=position_dodge(0.9)) +
# 分两列分面
facet_wrap(~ifelse(Gene %in% top_genes, "Top 10", "Others"),
nrow = 1, scales = "free_x") +
guides(fill=guide_legend(title=x)) +
labs(x = x, y = "Fraction") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
rt = read.csv(file = "luad-gsva-end.csv",
sep = ",",
header = T,
check.names=F,
row.names=1)
x=colnames(rt)[1]
colnames(rt)[1]="Type"
geneSig=c("")
for(gene in colnames(rt)[2:ncol(rt)]){
rt1=rt[,c(gene,"Type")]
colnames(rt1)=c("expression","Type")
p=1
if(length(levels(factor(rt1$Type)))>2){
test=kruskal.test(expression ~ Type, data = rt1)
p=test$p.value
}else{
test=wilcox.test(expression ~ Type, data = rt1)
p=test$p.value
}
Sig=ifelse(p<0.001,"***",ifelse(p<0.01,"**",ifelse(p<0.05,"*","")))
geneSig=c(geneSig,Sig)
}
colnames(rt)=paste0(colnames(rt),geneSig)
#把数据转换成ggplot2文件
data=melt(rt,id.vars=c("Type"))
colnames(data)=c("Type","Gene","Fraction")
ggplot(data,aes(x=Type,y=Fraction,fill=Type))+
guides(fill=guide_legend(title=x))+
labs(x = x, y = "Fraction")+
geom_violin()+ geom_boxplot(width=0.2,position=position_dodge(0.9))+
facet_wrap(~Gene,nrow =1)+ theme_bw()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggsave("vio-gsea-8-22.png",p1,width = 8000,height = 3500,units = "px")
ggplot(data, aes(x = Type, y = Fraction, fill = Type)) +
guides(fill = guide_legend(title = x)) +
labs(x = x, y = "Fraction") +
geom_violin() +
geom_boxplot(width = 0.2, position = position_dodge(0.9)) +
facet_wrap(~Gene, nrow = 1) +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
strip.text = element_text(size = 12))
ggplot(data, aes(x = Type, y = Fraction, fill = Type)) +
guides(fill = guide_legend(title = x)) +
labs(x = x, y = "Fraction") +
geom_violin() +
geom_boxplot(width = 0.2, position = position_dodge(0.9)) +
facet_wrap(~Gene, nrow = 1) +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
strip.text = element_text(size = 5))
ggplot(data, aes(x = Type, y = Fraction, fill = Type)) +
guides(fill = guide_legend(title = x)) +
labs(x = x, y = "Fraction") +
geom_violin() +
geom_boxplot(width = 0.2, position = position_dodge(0.9)) +
facet_wrap(~Gene, nrow = 1) +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
strip.text = element_text(size = 6))
ggplot(data, aes(x = Type, y = Fraction, fill = Type)) +
guides(fill = guide_legend(title = x)) +
labs(x = x, y = "Fraction") +
geom_violin() +
geom_boxplot(width = 0.2, position = position_dodge(0.9)) +
facet_wrap(~Gene, nrow = 1) +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
strip.text = element_text(size = 8))
ggplot(data, aes(x = Type, y = Fraction, fill = Type)) +
guides(fill = guide_legend(title = x)) +
labs(x = x, y = "Fraction") +
geom_violin() +
geom_boxplot(width = 0.2, position = position_dodge(0.9)) +
facet_wrap(~Gene, nrow = 2) +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
strip.text = element_text(size = 8))
p1=ggplot(data, aes(x = Type, y = Fraction, fill = Type)) +
guides(fill = guide_legend(title = x)) +
labs(x = x, y = "Fraction") +
geom_violin() +
geom_boxplot(width = 0.2, position = position_dodge(0.9)) +
facet_wrap(~Gene, nrow = 2) +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
strip.text = element_text(size = 8))
ggsave("vio-gsea-8-22.png",p1,width = 8000,height = 3500,units = "px")
library(ggplot2)
library(reshape2)
rt = read.csv(file = "luad-gsva-end.csv",
sep = ",",
header = T,
check.names=F,
row.names=1)
x=colnames(rt)[1]
colnames(rt)[1]="Type"
#差异分析
geneSig=c("")
for(gene in colnames(rt)[2:ncol(rt)]){
rt1=rt[,c(gene,"Type")]
colnames(rt1)=c("expression","Type")
p=1
if(length(levels(factor(rt1$Type)))>2){
test=kruskal.test(expression ~ Type, data = rt1)
p=test$p.value
}else{
test=wilcox.test(expression ~ Type, data = rt1)
p=test$p.value
}
Sig=ifelse(p<0.001,"***",ifelse(p<0.01,"**",ifelse(p<0.05,"*","")))
geneSig=c(geneSig,Sig)
}
colnames(rt)=paste0(colnames(rt),geneSig)
#把数据转换成ggplot2文件
data=melt(rt,id.vars=c("Type"))
colnames(data)=c("Type","Gene","Fraction")
genes <- unique(data$Gene)
top_genes <- head(genes, 10)
other_genes <- setdiff(genes, top_genes)
ggplot(data, aes(x = Type, y = Fraction, fill = Type)) +
guides(fill = guide_legend(title = x)) +
labs(x = x, y = "Fraction") +
geom_violin() +
geom_boxplot(width = 0.2, position = position_dodge(0.9)) +
facet_wrap(~Gene, nrow = 2) +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
strip.text = element_text(size = 8))
ggplot(data, aes(x = Type, y = Fraction, fill = Type)) +
guides(fill = guide_legend(title = x)) +
labs(x = x, y = "Fraction") +
geom_violin() +
geom_boxplot(width = 0.2, position = position_dodge(0.9)) +
facet_wrap(~Gene, nrow = 3) +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
strip.text = element_text(size = 12))
ggsave("vio-gsea-8-22.png",p1,width = 6000,height = 3500,units = "px")
#绘制
p1=ggplot(data, aes(x = Type, y = Fraction, fill = Type)) +
guides(fill = guide_legend(title = x)) +
labs(x = x, y = "Fraction") +
geom_violin() +
geom_boxplot(width = 0.2, position = position_dodge(0.9)) +
facet_wrap(~Gene, nrow = 3) +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
strip.text = element_text(size = 12))
ggsave("vio-gsea-8-22.png",p1,width = 6000,height = 3500,units = "px")
